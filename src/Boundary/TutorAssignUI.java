/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Boundary;

import control.CourseAssign;
import Entity.*;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.stream.Collectors;

/**
 *
 * @author hp
 */
public class TutorAssignUI extends javax.swing.JFrame {
    private CourseAssign courseAssignControl = new CourseAssign();

    /**
     * Creates new form TutorAssign
     */
    public TutorAssignUI() {
        initComponents();
        loadCourseList();
        TableFacultyProgrammeCourseInfo.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                TableFacultyProgrammeCourseInfoSelectAction(e);
            }
        });
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Course = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        Course1 = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jLabelSearch1 = new javax.swing.JLabel();
        jLabelSearch2 = new javax.swing.JLabel();
        textField1 = new java.awt.TextField();
        textField2 = new java.awt.TextField();
        jButtonSearch1 = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableFacultyProgrammeCourseInfo = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabelTitle.setText("Tutor, Course & Tutorial Group Information System");

        jTextField1.setText("Enter your name");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Select Courses:");

        Course.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CourseActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Select Course Type:");

        Course1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tutorial ", "Practical ", "Lecture" }));
        Course1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Course1ActionPerformed(evt);
            }
        });

        jTextField2.setText("Enter Tutorial Group");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabelSearch1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelSearch1.setText("Search:");

        jLabelSearch2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelSearch2.setText("Search:");

        jButtonSearch1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonSearch1.setText("Search by tutor");
        jButtonSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearch1ActionPerformed(evt);
            }
        });

        jButtonSearch.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonSearch.setText("Search by course");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        TableFacultyProgrammeCourseInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Tutor Name", "Course", "Course type", "Tutorial Group"
            }
        ));
        TableFacultyProgrammeCourseInfo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TableFacultyProgrammeCourseInfo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(TableFacultyProgrammeCourseInfo);

        jButton1.setBackground(new java.awt.Color(51, 153, 0));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 204));
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 51, 51));
        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelTitle)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Course, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Course1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(206, 206, 206)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSearch)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1168, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelTitle)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Course, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSearch2)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonSearch1))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Course1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabelSearch1))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonSearch)
                        .addGap(15, 15, 15)))
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void CourseActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
    }                                      

    private void Course1ActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
    }                                       

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void jButtonSearch1ActionPerformed(java.awt.event.ActionEvent evt) {                                               

      String name = textField1.getText(); // get the name from jTextField1 

    // filter the tutorAssignList by name
        List<TutorAssign> filteredTutorAssignList = courseAssignControl.getTutorAssignListAsList().stream()
        .filter(tutorAssign -> tutorAssign.getName().equals(name))
        .collect(Collectors.toList());

    // Calls populateTable method with the filtered list
    populateTableWithFilteredList(filteredTutorAssignList);
    }                                              

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        String name = jTextField1.getText();
        String course = (String)Course.getSelectedItem();
        String courseType = (String)Course1.getSelectedItem();
        String tutorialGroup = jTextField2.getText();
        
        TutorAssign newTutorAssign = new TutorAssign(name,course,courseType,tutorialGroup);
        courseAssignControl.addNewTutorAssign(newTutorAssign);
        populateTable();
     
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        int selectedRow = TableFacultyProgrammeCourseInfo.getSelectedRow();
        if(selectedRow != -1) {
            String updatedName = jTextField1.getText();
            String updatedCourse = (String)Course.getSelectedItem();
            String updatedCourseType = (String)Course1.getSelectedItem();
            String updatedTutorialGroup = (String)jTextField2.getText();

            TutorAssign selectedTutorAssign = new TutorAssign(updatedName,updatedCourse,updatedCourseType,updatedTutorialGroup);
            //selectedTutorAssign.setName(updatedName);
            //selectedTutorAssign.setCourse(updatedCourse);
            //selectedTutorAssign.setCourseType(updatedCourseType);
            //selectedTutorAssign.setTutorialGroup(updatedTutorialGroup);
            //courseAssignControl.getTutorAssignListAsList().set(selectedRow, selectedTutorAssign);
            courseAssignControl.updateTutorAssign(selectedRow + 1, selectedTutorAssign);
            populateTable();
        }
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        int selectedRow = TableFacultyProgrammeCourseInfo.getSelectedRow();
        courseAssignControl.deleteTutorAssign(selectedRow + 1);
        populateTable();
    }                                        

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        String coursename = textField2.getText(); // get the name from jTextField1

        // filter the tutorAssignList by name
        List<TutorAssign> filteredTutorAssignList = courseAssignControl.getTutorAssignListAsList().stream()
                .filter(tutorAssign -> tutorAssign.getCourse().contains(coursename))
                .collect(Collectors.toList());

        // Calls populateTable method with the filtered list
        populateTableWithFilteredList(filteredTutorAssignList);
    }                                             

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TutorAssignUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TutorAssignUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TutorAssignUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TutorAssignUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TutorAssignUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> Course;
    private javax.swing.JComboBox<String> Course1;
    private javax.swing.JTable TableFacultyProgrammeCourseInfo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonSearch1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelSearch1;
    private javax.swing.JLabel jLabelSearch2;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    // End of variables declaration                   

    public void populateTable() {
        List<TutorAssign> data = courseAssignControl.getTutorAssignListAsList();

        DefaultTableModel tableModel = (DefaultTableModel) TableFacultyProgrammeCourseInfo.getModel();
        tableModel.setRowCount(0);

        for (TutorAssign tutorAssign : data) {
            Object[] row = new Object[]{tutorAssign.getName(), tutorAssign.getCourse(), tutorAssign.getCourseType(), tutorAssign.getTutorialGroup()};
            tableModel.addRow(row);
        }
    }

    public void populateTableWithFilteredList(List<TutorAssign> filteredList) {
        DefaultTableModel tableModel = (DefaultTableModel) TableFacultyProgrammeCourseInfo.getModel();
        tableModel.setRowCount(0);

        for (TutorAssign tutorAssign : filteredList) {
            Object[] row = new Object[]{tutorAssign.getName(), tutorAssign.getCourse(), tutorAssign.getCourseType(), tutorAssign.getTutorialGroup()};
            tableModel.addRow(row);
        }
        ((AbstractTableModel) TableFacultyProgrammeCourseInfo.getModel()).fireTableDataChanged();
    }

    private void TableFacultyProgrammeCourseInfoSelectAction(javax.swing.event.ListSelectionEvent evt){
        int selectedRow = TableFacultyProgrammeCourseInfo.getSelectedRow();
        if (selectedRow != -1) { // -1 means no row is selected
            // Assuming 'name' is the first column, adjust according to your table structure
            String name = (String) TableFacultyProgrammeCourseInfo.getValueAt(selectedRow, 0);
            jTextField1.setText(name);
            String course = (String) TableFacultyProgrammeCourseInfo.getValueAt(selectedRow, 1);
            Course.setSelectedItem(course);
            String courseType = (String) TableFacultyProgrammeCourseInfo.getValueAt(selectedRow, 2);
            Course1.setSelectedItem(courseType);
            String tutorialGroup = (String) TableFacultyProgrammeCourseInfo.getValueAt(selectedRow, 3);
            jTextField2.setText(tutorialGroup);
        }
    };

    private void loadCourseList() {
        for (TutorCourses course : courseAssignControl.coursesArrayList()) {
            Course.addItem(course.getCourseCode() + " " +  course.getCourseName());
        }
    }


}
